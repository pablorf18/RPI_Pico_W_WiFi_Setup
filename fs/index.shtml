<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WiFi Connection Setup</title>
    <style>
        /* Message box styles */
        .message {
            padding: 15px;
            background-color: #7798d6;
            color: rgb(0, 0, 0);
            margin-bottom: 15px;
            border-radius: 5px;
            text-align: center;
            font-size: 16px;
            width: fit-content;
            display: none; /* Hidden by default */
        }
    </style>
</head>
<body>
    <h1>WiFi Connection Setup</h1>

    <div id="messageBox" class="message"></div>

    <form id="wifiForm" onsubmit="submitForm(event)">
        <label for="ssid">Select WiFi Network:</label>
        <select id="ssid" name="ssid" required>
            <!--#wifi-->
        </select>
        <button type="button" id="scanButton" onclick="refreshWifiList()">Scan Networks</button>
        <br><br>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password">
        <br><br>
        <input type="submit" value="Connect" id="connectButton">
    </form>
    
    <script>
        function showMessage(message) {
            const messageBox = document.getElementById('messageBox');
            messageBox.textContent = message;
            messageBox.style.display = 'block';
        }

        function hideMessage() {
            const messageBox = document.getElementById('messageBox');
            messageBox.style.display = 'none';
        }

        function showButton(id) {
            const button = document.getElementById(id);
            // To enable the button
            button.disabled = false;
            button.classList.remove('grayed-out');
        }

        function grayOutButton(id) {
            const button = document.getElementById(id);
            // To gray out the button
            button.disabled = true;
            button.classList.add('grayed-out');
        }

        function fetchWithTimeout(url, options, timeout = 10000) {
            return new Promise((resolve, reject) => {
                const controller = new AbortController();
                const signal = controller.signal;
                options.signal = signal;

                const timeoutId = setTimeout(() => {
                    controller.abort();
                    reject(new Error('Request timed out'));
                }, timeout);

                fetch(url, options)
                    .then(response => {
                        clearTimeout(timeoutId);
                        resolve(response);
                    })
                    .catch(error => {
                        clearTimeout(timeoutId);
                        reject(error);
                    });
            });
        }

        function refreshWifiList() {
            showMessage("Scanning networks...");
            grayOutButton('connectButton');
            grayOutButton('scanButton');
            fetchWithTimeout('/scan_wifi', {}, 10000)
                .then(response => response.text())
                .then(data => {
                    document.querySelector('select[name="ssid"]').innerHTML = data;
                    hideMessage();
                    showButton('connectButton');
                    showButton('scanButton');
                })
                .catch(error => {
                    console.error('Error refreshing Wi-Fi list:', error);
                    alert('Failed to refresh Wi-Fi list. Please try again.');
                    hideMessage();
                    showButton('connectButton');
                    showButton('scanButton');
                });
        }

        function submitForm(event) {
            event.preventDefault();

            showMessage("Trying to connect to wifi...");
            grayOutButton('connectButton');
            grayOutButton('scanButton');

            const form = document.getElementById('wifiForm');
            const formData = new FormData(form);

            // Encode the password
            const password = formData.get('password');
            formData.set('password', encodeURIComponent(password));

            const queryString = new URLSearchParams(formData).toString();

            fetchWithTimeout('/connect?' + queryString, { method: 'GET' }, 20000)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Wi-Fi connected successfully! Disabling AP mode.");
                    showConnectedPage();
                } else {
                    throw new Error('Failed to connect to Wi-Fi');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to connect to Wi-Fi');
                hideMessage();
                showButton('connectButton');
                showButton('scanButton');
            });
        }

        // new content for the web page once connection is successful
        function showConnectedPage() {
            // Clear the current page content
            document.body.innerHTML = '';

            // Create and append new content
            const newContent = document.createElement('div');
            newContent.innerHTML = `
                <h1>You are now connected to internet</h1>
                <p>Your device has successfully connected to the Wi-Fi network. The Pico's network will be turned off.</p>
            `;
            document.body.appendChild(newContent);
        }
    </script>
</body>
</html>